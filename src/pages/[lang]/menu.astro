---
import '../../styles/global.css'
import Navigation from '../../components/Navigation.astro'
import Hero from '../../components/Hero.astro'
import Footer from '../../components/Footer.astro'
import { getTranslations, useTranslations, languages } from '../../i18n/utils.js'
import { getLocalizedMenuData } from '../../data/menu-i18n.ts'
import type { MenuCategory, MenuItem } from '../../types/menu'

// Generate static paths for all languages
export async function getStaticPaths() {
  const paths = Object.keys(languages).map(lang => ({
    params: { lang }
  }));
  
  return paths;
}

// Get the language from the URL params
const { lang } = Astro.params;
const translations = await getTranslations(lang);
const t = useTranslations(translations);
const menuData = getLocalizedMenuData(lang, translations);
---

<html lang={lang}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{t('meta.menuTitle')}</title>
    <meta name="description" content={t('meta.menuDescription')} />
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href={`${import.meta.env.BASE_URL}favicon.svg`} />
    <link rel="icon" type="image/png" href={`${import.meta.env.BASE_URL}favicon.png`} />
    <link rel="apple-touch-icon" href={`${import.meta.env.BASE_URL}apple-touch-icon.png`} />
    
    <!-- Visitor tracking -->
    <script>
      // Send visitor data to Google Sheets
      fetch('https://script.google.com/macros/s/AKfycbxvZNXq1f3CU8pEg-pgsij9VICglp62bLKH1l0YRPe4k4GdOFvvLaA0rmNQ2XzqrPRz0Q/exec', {
        method: 'POST',
        mode: 'no-cors',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          timestamp: new Date().toISOString(),
          page: window.location.href,
          userAgent: navigator.userAgent,
          language: navigator.language
        })
      }).catch(err => console.log('Tracking request failed:', err));
    </script>
  </head>

  <body class="bg-gray-50">
    <!-- Navigation -->
    <Navigation currentPage="menu" lang={lang} translations={translations} />

    <main>
      <!-- Hero Section -->
      <Hero
        title={t('navigation.menu')}
        subtitle={t('menu.featuredSubtitle')}
        showButtons={false}
        lang={lang}
        translations={translations}
        useFixedBackground={false}
      />

      <!-- Featured Cocktails Section -->
      {menuData.kokteil && (
        <section class="py-16 bg-white">
          <div class="container mx-auto px-4">
            <div class="text-center mb-12">
              <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
                {t('menu.featuredCocktails')}
              </h2>
              <p class="text-lg text-gray-600 max-w-2xl mx-auto">
                {t('menu.featuredSubtitle')}
              </p>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
              {menuData.kokteil.items.map((item: MenuItem) => (
                <div class="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300">
                  {item.image && (
                    <div class="h-48 overflow-hidden">
                      <img 
                        src={item.image} 
                        alt={item.name}
                        class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                      />
                    </div>
                  )}
                  <div class="p-6">
                    <div class="flex justify-between items-start mb-3">
                      <h3 class="text-xl font-semibold text-gray-900">{item.name}</h3>
                      <span class="text-lg font-bold text-blue-600">{item.price}</span>
                    </div>
                    {item.description && (
                      <p class="text-gray-600 text-sm leading-relaxed">{item.description}</p>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>
      )}

      <!-- Full Menu Section -->
      <section class="py-16 bg-gray-50">
        <div class="container mx-auto px-4">
          <div class="text-center mb-12">
            <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
              {t('navigation.menu')}
            </h2>
          </div>
          
          <div class="max-w-4xl mx-auto space-y-12">
            {Object.entries(menuData).map(([categoryKey, category]: [string, MenuCategory]) => (
              <div class="bg-white rounded-xl shadow-lg p-8">
                <h3 class="text-2xl font-bold text-gray-900 mb-6 text-center border-b border-gray-200 pb-4">
                  {category.title}
                </h3>
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  {category.items.map((item: MenuItem) => (
                    <div class="flex justify-between items-start py-3 border-b border-gray-100 last:border-b-0">
                      <div class="flex-1">
                        <h4 class="font-medium text-gray-900">{item.name}</h4>
                        {item.description && (
                          <p class="text-sm text-gray-600 mt-1">{item.description}</p>
                        )}
                      </div>
                      <span class="font-semibold text-blue-600 ml-4">{item.price}</span>
                    </div>
                  ))}
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    </main>

    <!-- Footer -->
    <Footer lang={lang} translations={translations} />
  </body>
</html>
